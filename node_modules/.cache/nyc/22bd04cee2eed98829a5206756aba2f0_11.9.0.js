'use strict';var cov_183su027n8=function(){var path="C:\\Users\\Hubei\\Documents\\ruptela-master\\ruptela-master\\lib\\iterator.js",hash="ebb4087996a70a3a8871c2254799ce463ddea9a6",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\Hubei\\Documents\\ruptela-master\\ruptela-master\\lib\\iterator.js",statementMap:{"0":{start:{line:17,column:8},end:{line:19,column:9}},"1":{start:{line:18,column:12},end:{line:18,column:67}},"2":{start:{line:21,column:8},end:{line:21,column:21}},"3":{start:{line:22,column:8},end:{line:22,column:19}},"4":{start:{line:29,column:8},end:{line:29,column:22}},"5":{start:{line:36,column:8},end:{line:36,column:22}},"6":{start:{line:43,column:8},end:{line:43,column:29}},"7":{start:{line:55,column:26},end:{line:55,column:32}},"8":{start:{line:56,column:8},end:{line:56,column:29}},"9":{start:{line:58,column:8},end:{line:60,column:9}},"10":{start:{line:59,column:12},end:{line:59,column:60}},"11":{start:{line:61,column:8},end:{line:61,column:55}},"12":{start:{line:69,column:0},end:{line:69,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:4},end:{line:15,column:5}},loc:{start:{line:15,column:21},end:{line:23,column:5}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:17},end:{line:30,column:5}},line:28},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:4},end:{line:35,column:5}},loc:{start:{line:35,column:17},end:{line:37,column:5}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:14},end:{line:44,column:5}},line:42},"4":{name:"(anonymous_4)",decl:{start:{line:54,column:4},end:{line:54,column:5}},loc:{start:{line:54,column:42},end:{line:62,column:5}},line:54}},branchMap:{"0":{loc:{start:{line:17,column:8},end:{line:19,column:9}},type:"if",locations:[{start:{line:17,column:8},end:{line:19,column:9}},{start:{line:17,column:8},end:{line:19,column:9}}],line:17},"1":{loc:{start:{line:54,column:25},end:{line:54,column:40}},type:"default-arg",locations:[{start:{line:54,column:36},end:{line:54,column:40}}],line:54},"2":{loc:{start:{line:58,column:8},end:{line:60,column:9}},type:"if",locations:[{start:{line:58,column:8},end:{line:60,column:9}},{start:{line:58,column:8},end:{line:60,column:9}}],line:58}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0],"2":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();let buffer,offset;/**
 * This class iterates through buffer
 */class Iterator{/**
     * Set buffer
     * 
     * @param {Buffer} buf
     */constructor(buf){cov_183su027n8.f[0]++;cov_183su027n8.s[0]++;//check if buffer is truly a buffer
if(!Buffer.isBuffer(buf)){cov_183su027n8.b[0][0]++;cov_183su027n8.s[1]++;throw new Error("Input must be an instance of Buffer");}else{cov_183su027n8.b[0][1]++;}//set buffer
cov_183su027n8.s[2]++;buffer=buf;cov_183su027n8.s[3]++;offset=0;}/**
     * Get buffer
     */get buffer(){cov_183su027n8.f[1]++;cov_183su027n8.s[4]++;return buffer;}/**
     * Get offset
     */get offset(){cov_183su027n8.f[2]++;cov_183su027n8.s[5]++;return offset;}/**
     * Get end of buffer
     */get end(){cov_183su027n8.f[3]++;cov_183su027n8.s[6]++;return buffer.length;}/**
     * Reads byteLength number of bytes from buffer at the specified offset 
     * and interprets the result as an (unsigned) integer
     * 
     * @param {int} byteLength
     * @param {boolean} unsigned
     * @returns {int}
     */readNext(byteLength,unsigned=(cov_183su027n8.b[1][0]++,true)){cov_183su027n8.f[4]++;const tmpOffset=(cov_183su027n8.s[7]++,offset);cov_183su027n8.s[8]++;offset+=byteLength;//check if an unsigned integer should be returned
cov_183su027n8.s[9]++;if(unsigned===true){cov_183su027n8.b[2][0]++;cov_183su027n8.s[10]++;return buffer.readUIntBE(tmpOffset,byteLength);}else{cov_183su027n8.b[2][1]++;}cov_183su027n8.s[11]++;return buffer.readIntBE(tmpOffset,byteLength);}}/**
 * Expose class
 */cov_183su027n8.s[12]++;module.exports=Iterator;