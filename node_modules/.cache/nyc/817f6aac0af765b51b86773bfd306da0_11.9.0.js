'use strict';/**
 * Module dependencies
 */var cov_qne0zveog=function(){var path='C:\\Users\\Hubei\\Documents\\ruptela-master\\ruptela-master\\lib\\record.js',hash='a0b687a3d065d1aa07f63381af53d7f074638cd1',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'C:\\Users\\Hubei\\Documents\\ruptela-master\\ruptela-master\\lib\\record.js',statementMap:{'0':{start:{line:6,column:16},end:{line:6,column:36}},'1':{start:{line:18,column:8},end:{line:18,column:16}},'2':{start:{line:23,column:8},end:{line:76,column:10}},'3':{start:{line:78,column:8},end:{line:78,column:28}},'4':{start:{line:80,column:8},end:{line:80,column:321}},'5':{start:{line:87,column:0},end:{line:87,column:24}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:18},end:{line:81,column:5}},line:17}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},f:{'0':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Segment=(cov_qne0zveog.s[0]++,require('./segment'));/**
 * Record consists of 2 parts: header (23 bytes) and body (4-103 bytes).
 * Maximum record size is 126 bytes.
 */class Record extends(Segment){/**
     * Set record
     */constructor(){cov_qne0zveog.f[0]++;cov_qne0zveog.s[1]++;super();/**
         * Set record fields
         */cov_qne0zveog.s[2]++;this.fields={//23 bytes
header:{//Unix timestamp in seconds
timestamp:4,//Timestamp extension separates records with same timestamp.
//Parameter will increase starting with 0, or will always be 0.
timestamp_extension:1,//Priority can be 0 (low) or 1 (high).
//It depends on configuration of event which triggered record.
priority:1,//Longitude is GPS element that reveals the position of an object.
//Value is already multiplied by –1 if longitude is in west.
//Value is multiplied by 10000000 for precision.
longitude:4,//Latitude is GPS element that reveals the position of an object.
//Value is already multiplied by –1 if latitude is in south.
//Value is multiplied by 10000000 for precision.
latitude:4,//Altitude is GPS element that reveals the position of an object.
//Parameter is in meters above sea level.
//Value is already multiplied by 10 for precision.
altitude:2,//Angle is GPS element that reveals the direction of an object.
//Parameter is in degrees, where 0 is north, increasing clock-wise.
//Value is already multiplied by 100 for precision.
angle:2,//Satellites is GPS element that reveals the number of
//visible GPS or GLONASS satellites.
satellites:1,//Speed is GPS element that reveals the speed of an object.
//Parameter is in km/h.
speed:2,//HDOP (Horizontal Dilute Of Precision) is GPS element.
//Determines the relative accuracy of a horizontal position.
//The smaller the number, the better the geometry.
//Value is already multiplied by 10 for precision.
hdop:1,//Parameter indicates why the record was created.
//Value is event ID number.
event_id:1},//4-103 bytes
body:{//Parameter indicates number of IO records, with length of 1 byte.
n1:1,//Parameter indicates number of IO records, with length of 2 bytes.
n2:1,//Parameter indicates number of IO records, with length of 4 bytes.
n4:1,//Parameter indicates number of IO records, with length of 8 bytes.
n8:1}};//IO ID length - 1 byte
cov_qne0zveog.s[3]++;this.ioIdLength=1;//IO IDs with signed integers
cov_qne0zveog.s[4]++;this.ioIdSignedIntegers=[6,26,32,33,49,50,51,56,57,58,59,60,61,62,63,64,75,76,78,79,80,96,97,101,144,145,146,147,148,149,184,185,186,187,212,229,230,231,232,233,234,419,509,510,511,512,513,514,520,584,585,586,587,594,600,601,602,603,604,611,612,613];}}/**
 * Expose class
 */cov_qne0zveog.s[5]++;module.exports=Record;