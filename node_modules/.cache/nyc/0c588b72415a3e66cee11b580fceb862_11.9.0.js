'use strict';/**
 * Module dependencies
 */var cov_2kvaene0qi=function(){var path='C:\\Users\\Hubei\\Documents\\ruptela-master\\ruptela-master\\lib\\command.js',hash='3bedaadd4cb9f3d722fc00d98a1dddc3d2e39f41',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'C:\\Users\\Hubei\\Documents\\ruptela-master\\ruptela-master\\lib\\command.js',statementMap:{'0':{start:{line:6,column:16},end:{line:6,column:36}},'1':{start:{line:21,column:8},end:{line:23,column:9}},'2':{start:{line:22,column:12},end:{line:22,column:78}},'3':{start:{line:25,column:8},end:{line:25,column:31}},'4':{start:{line:27,column:8},end:{line:29,column:9}},'5':{start:{line:28,column:12},end:{line:28,column:73}},'6':{start:{line:32,column:8},end:{line:32,column:23}},'7':{start:{line:33,column:8},end:{line:33,column:24}},'8':{start:{line:40,column:0},end:{line:40,column:25}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:19,column:4},end:{line:19,column:5}},loc:{start:{line:19,column:25},end:{line:34,column:5}},line:19}},branchMap:{'0':{loc:{start:{line:21,column:8},end:{line:23,column:9}},type:'if',locations:[{start:{line:21,column:8},end:{line:23,column:9}},{start:{line:21,column:8},end:{line:23,column:9}}],line:21},'1':{loc:{start:{line:27,column:8},end:{line:29,column:9}},type:'if',locations:[{start:{line:27,column:8},end:{line:29,column:9}},{start:{line:27,column:8},end:{line:29,column:9}}],line:27}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0},f:{'0':0},b:{'0':[0,0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Segment=(cov_2kvaene0qi.s[0]++,require('./segment'));/**
 * This class represents "interface" for commands
 */class Command{/**
     * Set payload (must be an instance of Segment),
     * and check if 'execute' is a function
     * 
     * @param {Segment} payload
     */constructor(payload){cov_2kvaene0qi.f[0]++;cov_2kvaene0qi.s[1]++;//check if payload is a segment
if(!(payload instanceof Segment)){cov_2kvaene0qi.b[0][0]++;cov_2kvaene0qi.s[2]++;throw new Error("Command Payload must be an instance of Segment");}else{cov_2kvaene0qi.b[0][1]++;}//set payload
cov_2kvaene0qi.s[3]++;this.payload=payload;//check if function execute is implemented
cov_2kvaene0qi.s[4]++;if(typeof this.execute!=="function"){cov_2kvaene0qi.b[1][0]++;cov_2kvaene0qi.s[5]++;throw new Error("Command must implement function 'execute'");}else{cov_2kvaene0qi.b[1][1]++;}//init data and acknowledgement 
//each command needs to return these two back
cov_2kvaene0qi.s[6]++;this.data={};cov_2kvaene0qi.s[7]++;this.ack=null;}}/**
 * Expose class
 */cov_2kvaene0qi.s[8]++;module.exports=Command;