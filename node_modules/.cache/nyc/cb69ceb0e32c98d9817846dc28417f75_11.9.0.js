'use strict';var cov_wdb2rym05=function(){var path='C:\\Users\\Hubei\\Documents\\ruptela-master\\ruptela-master\\lib\\commander.js',hash='eeb36fae00480b05bd4dccaee115a6ae6cb7b570',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'C:\\Users\\Hubei\\Documents\\ruptela-master\\ruptela-master\\lib\\commander.js',statementMap:{'0':{start:{line:8,column:16},end:{line:8,column:36}},'1':{start:{line:9,column:19},end:{line:9,column:40}},'2':{start:{line:23,column:8},end:{line:25,column:9}},'3':{start:{line:24,column:12},end:{line:24,column:59}},'4':{start:{line:27,column:25},end:{line:27,column:67}},'5':{start:{line:29,column:8},end:{line:29,column:38}},'6':{start:{line:39,column:8},end:{line:41,column:9}},'7':{start:{line:40,column:12},end:{line:40,column:80}},'8':{start:{line:42,column:8},end:{line:42,column:22}},'9':{start:{line:51,column:8},end:{line:51,column:23}},'10':{start:{line:59,column:0},end:{line:59,column:27}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:21,column:4},end:{line:21,column:5}},loc:{start:{line:21,column:28},end:{line:30,column:5}},line:21},'1':{name:'(anonymous_1)',decl:{start:{line:37,column:4},end:{line:37,column:5}},loc:{start:{line:37,column:21},end:{line:43,column:5}},line:37},'2':{name:'(anonymous_2)',decl:{start:{line:50,column:4},end:{line:50,column:5}},loc:{start:{line:50,column:18},end:{line:52,column:5}},line:50}},branchMap:{'0':{loc:{start:{line:23,column:8},end:{line:25,column:9}},type:'if',locations:[{start:{line:23,column:8},end:{line:25,column:9}},{start:{line:23,column:8},end:{line:25,column:9}}],line:23},'1':{loc:{start:{line:39,column:8},end:{line:41,column:9}},type:'if',locations:[{start:{line:39,column:8},end:{line:41,column:9}},{start:{line:39,column:8},end:{line:41,column:9}}],line:39}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0},f:{'0':0,'1':0,'2':0},b:{'0':[0,0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();let command;/**
 * Module dependencies
 */const Command=(cov_wdb2rym05.s[0]++,require('./command')),commands=(cov_wdb2rym05.s[1]++,require('./commands'));/**
 * This class handles commands
 */class Commander{/**
     * Set command
     * 
     * @param {int} command_id
     */constructor(command_id){cov_wdb2rym05.f[0]++;cov_wdb2rym05.s[2]++;//check if command ID is supported
if(!commands.includes(command_id)){cov_wdb2rym05.b[0][0]++;cov_wdb2rym05.s[3]++;throw new Error("Command ID is not supported");}else{cov_wdb2rym05.b[0][1]++;}//require related command
const CCommand=(cov_wdb2rym05.s[4]++,require('./command/command_'+command_id));//call setter
cov_wdb2rym05.s[5]++;this.command=new CCommand();}/**
     * Set command (must be an instance of Command)
     * 
     * @param {Command} cmd
     */set command(cmd){cov_wdb2rym05.f[1]++;cov_wdb2rym05.s[6]++;//check if command is truly a command
if(!(cmd instanceof Command)){cov_wdb2rym05.b[1][0]++;cov_wdb2rym05.s[7]++;throw new Error("Commander Command must be an instance of Command");}else{cov_wdb2rym05.b[1][1]++;}cov_wdb2rym05.s[8]++;command=cmd;}/**
     * Get command
     * 
     * @returns {Command}
     */get command(){cov_wdb2rym05.f[2]++;cov_wdb2rym05.s[9]++;return command;}}/**
 * Expose class
 */cov_wdb2rym05.s[10]++;module.exports=Commander;