version: '3.8'

services:
  nginx-proxy:
    container_name: nginx
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html

  letsencrypt:
    container_name: nginx-letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx
      - NGINX_DOCKER_GEN_CONTAINER=nginx
      - DEFAULT_EMAIL=hubeidata@gmail.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html

  websocket-service:
    build:
      context: ./auth-back   # Cambia esta ruta si tu Dockerfile no está en la raíz
      dockerfile: Dockerfile.dev     # O el nombre de tu Dockerfile si es diferente
    restart: always
    volumes:
      - ./:/app    # Código fuente para desarrollo
      - /app/node_modules
    expose:
      - "5000"
    ports:
      - "6001:5000"                  # Puedes cambiar el puerto local 6001 si quieres
    environment:
      - VIRTUAL_HOST=ruptela.santiago.maxtelperu.com
      - VIRTUAL_PORT=5000
      - LETSENCRYPT_HOST=ruptela.santiago.maxtelperu.com
      - LETSENCRYPT_EMAIL=hubeidata@gmail.com 
      
      - POSTGRES_USER=usuario_postgres
      - POSTGRES_PASSWORD=tu_password
      - POSTGRES_DB=nombre_db

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: usuario_postgres
      POSTGRES_PASSWORD: tu_password
      POSTGRES_DB: nombre_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  certs:
  vhostd:
  html:
  postgres-data:
