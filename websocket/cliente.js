import net from 'net';

// Configura host y puerto
const options = { host:'54.90.199.205',port: 6000 };
//const options = { host:'localhost',port: 6000 };

console.log(`[${new Date().toISOString()}] Iniciando conexión a ${options.host}:${options.port}`);

const client = net.connect(options, () => {
  console.log(`[${new Date().toISOString()}] Conectado al servidor`);

  // Datos en hexadecimal
  const hexString = '0335000311118ffc284101011e386d45f9000180000000800000008000ffffffffffff00000000006825345e0000d555bc75f643da28656c27420500000707000000006825349a0000d555bb5af643da3965702c42050000070700000000682534d60000d555bc43f643da9d655b72ce050000070700000000682535120000d555bb49f643dc0c657d72100500000707000000006825354e0000d555b7b4f643da7c655c6eb4050000070700000000682535570000d555b85bf643d90d65512dfa050007070900000000682535680000d555b87cf643d85665126f5e050007070900000000682535760000d555b934f643d6f864f93020050005070900000000682535870000d555bbadf643d4a064d5740e050007070900000000682535c30000d555ae65f643d9c4647367e8050000070700000000682535ff0000d555b52af643dd59641571980500030707000000006825360e0000d555b51af643df90644d29a40500090709000000006825364a0000d555b6aaf643ddde6494316a0500000707000000006825365e0000d555b635f643de74649a69fa0500050609000000006825369a0000d555b4a5f643e05864567f44050000060700000000682536c00000d555b40ff643e06864582fa8050006060900000000682536ea0000d555b5e2f643e026647167ca050005060900000000682537080000d555b326f643e026649b7fe4060005110900000000682537440000d555b1d8f643e21a647f7eea000000000700000000682537800000d5559e40f6441010657285e8000000000700000000682537bc0000d555a0b9f64410a65eda84e4000000000700000000682537f80000d555a0b9f64410a65eda84e4000000000700000000682538340000d555a0b9f64410a65eda84e4000000000700000000682538700000d555a0b9f64410a65eda84e4000000000700000000682538ac0000d555a0b9f64410a65eda84e4000000000700000000682538e80000d555a0b9f64410a65eda84e4000000000700000000682539240000d555a0b9f64410a65eda84e4000000000700000000682539600000d555a0b9f64410a65eda84e40000000007000000006825399c0000d555a0b9f64410a65eda84e40000000007000000008000';

  const data = Buffer.from(hexString, 'hex');
  console.log(`[${new Date().toISOString()}] Enviando ${data.length} bytes: ${hexString}`);
  client.write(data);
});

// Cuando llegan datos del servidor
client.on('data', (chunk) => {
  const receivedHex = chunk.toString('hex').toUpperCase();
  console.log(`[${new Date().toISOString()}] Recibido ${chunk.length} bytes: ${receivedHex}`);
});

// Al cerrar la conexión
client.on('end', () => {
  console.log(`[${new Date().toISOString()}] Conexión terminada por el servidor`);
});

// Al ocurrir un error
client.on('error', (err) => {
  console.error(`[${new Date().toISOString()}] Error de conexión:`, err);
});

// Opcional: detectar cierre completo
client.on('close', (hadError) => {
  console.log(
    `[${new Date().toISOString()}] Conexión cerrada${hadError ? ' con error' : ''}`
  );
});
